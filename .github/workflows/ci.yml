name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "8.8.4"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "8.10.7" }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.0.2"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.2.8"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.4.8"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.6.7"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.6.7",
              flags: "-fUnsafeChecks -fInternalChecks" }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.8.4"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.10.2"  }
          - { cabal: "3.14", os: ubuntu-24.04,  ghc: "9.12.2"  }
          # Win
          - { cabal: "3.14", os: windows-latest, ghc: "9.6.7"  }
          - { cabal: "3.14", os: windows-latest, ghc: "9.8.4"  }
          - { cabal: "3.14", os: windows-latest, ghc: "9.10.2"  }
          - { cabal: "3.14", os: windows-latest, ghc: "9.12.2"  }
          # MacOS
          # Fails with linker errors
          #  > ld: warning: -single_module is obsolete
          #  > <command line>: can't load framework: Security (not found)
          # - { cabal: "3.14", os: macOS-13,       ghc: "8.6.5"  }
          # - { cabal: "3.14", os: macOS-13,       ghc: "8.8.4"  }
          - { cabal: "3.14", os: macOS-13,       ghc: "8.10.7" }
          - { cabal: "3.14", os: macOS-13,       ghc: "9.0.2"  }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.2.8"  }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.4.8"  }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.6.7"  }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.8.4"  }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.10.2" }
          - { cabal: "3.14", os: macOS-latest,   ghc: "9.12.2" }
      fail-fast: false

    steps:
    # ----------------
    - uses: actions/checkout@v5
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'
    # ----------------
    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    # ----------------
    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}---CACHE_V3
    # ----------------
    - name: "Install PAPI"
      run: |
        sudo apt-get install -y libpapi-dev
        echo FLAG_PAPI=-fBenchPAPI >> "$GITHUB_ENV"
      if: matrix.os == 'ubuntu-24.04'
    # ----------------
    - name: Versions
      run: |
        cabal -V
        ghc -V
    # ----------------
    - name: Make sdist
      run: |
        mkdir sdist
        cabal sdist vector            -o sdist
        cabal sdist vector-stream     -o sdist
        cabal sdist vector-bench-papi -o sdist
    - name: Unpack
      run: |
        mkdir unpacked
        for NM in sdist/vector*tar.gz; do
            tar -C unpacked -xzf $NM
        done
        echo "packages:"            >> unpacked/cabal.project
        echo "    vector-*/*.cabal" >> unpacked/cabal.project
    # ----------------
    - name: cabal check
      run: |
        for nm in vector-*; do
            echo Checking $nm
            (cd "$nm" && cabal -vnormal check)
        done
      working-directory: unpacked/
   # ----------------
    - name: Build
      run: |
        echo FLAG_PAPI=$FLAG_PAPI
        cabal configure ${{ matrix.flags }} $FLAG_PAPI --haddock-all --enable-tests --enable-benchmarks --benchmark-option=-l
        cabal build all --write-ghc-environment-files=always
      working-directory: unpacked/
    # ----------------
    - name: Test
      run: |
        cabal test all
      working-directory: unpacked/
    # ----------------
    - name: Bench
      run: |
        cabal bench all
      working-directory: unpacked/
